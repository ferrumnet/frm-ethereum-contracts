{
  "contractName": "FestakingTest",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "ERC20Interface",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "withdrawStarts",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "SEC",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "earlyWithdrawReward",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "stakeOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "stakingCap",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "stakedBalance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "stakingStarts",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalReward",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "rewardAmount",
          "type": "uint256"
        },
        {
          "name": "withdrawableAmount",
          "type": "uint256"
        }
      ],
      "name": "addReward",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "token",
          "type": "address"
        }
      ],
      "name": "registerTokenForTest",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "tokenAddress",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "stake",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "rewardBalance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "GAP",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "stakingEnds",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "stakedTotal",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "withdrawEnds",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "name_",
          "type": "string"
        },
        {
          "name": "tokenAddress_",
          "type": "address"
        },
        {
          "name": "stakingCap_",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "token",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "staker_",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "requestedAmount_",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "stakedAmount_",
          "type": "uint256"
        }
      ],
      "name": "Staked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "token",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "staker_",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "amount_",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "reward_",
          "type": "uint256"
        }
      ],
      "name": "PaidOut",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "token",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "staker_",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "amount_",
          "type": "uint256"
        }
      ],
      "name": "Refunded",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "setStakingPeriod",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "offset",
          "type": "uint256"
        }
      ],
      "name": "setEarlyWithdrawalPeriod",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "setAfterWithdrawal",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.8+commit.23d335f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ERC20Interface\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"withdrawStarts\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"SEC\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"earlyWithdrawReward\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"stakeOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"stakingCap\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"stakedBalance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"stakingStarts\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalReward\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"rewardAmount\",\"type\":\"uint256\"},{\"name\":\"withdrawableAmount\",\"type\":\"uint256\"}],\"name\":\"addReward\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"token\",\"type\":\"address\"}],\"name\":\"registerTokenForTest\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"setStakingPeriod\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"offset\",\"type\":\"uint256\"}],\"name\":\"setEarlyWithdrawalPeriod\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"setAfterWithdrawal\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"rewardBalance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"GAP\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"stakingEnds\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"stakedTotal\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"withdrawEnds\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"name_\",\"type\":\"string\"},{\"name\":\"tokenAddress_\",\"type\":\"address\"},{\"name\":\"stakingCap_\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"staker_\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"requestedAmount_\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"stakedAmount_\",\"type\":\"uint256\"}],\"name\":\"Staked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"staker_\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount_\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"reward_\",\"type\":\"uint256\"}],\"name\":\"PaidOut\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"staker_\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount_\",\"type\":\"uint256\"}],\"name\":\"Refunded\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{\"stake(uint256)\":{\"notice\":\"Requirements: - `amount` Amount to be staked\"}}}},\"settings\":{\"compilationTarget\":{\"/Users/wycliffkasirye/Desktop/projects/frm-ethereum-contracts/contracts/FestakingTest.sol\":\"FestakingTest\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/wycliffkasirye/Desktop/projects/frm-ethereum-contracts/contracts/Festaking.sol\":{\"keccak256\":\"0x6f8ade7e48a6a21465e7a7dfc7eeee5053f23a742444004c4c3ef1c04f43320a\",\"urls\":[\"bzzr://12a1e72584b0f63c6e2ad4a5e0687c3b2b386c5e8fecd47a423db7fa32323aaf\"]},\"/Users/wycliffkasirye/Desktop/projects/frm-ethereum-contracts/contracts/FestakingTest.sol\":{\"keccak256\":\"0x466d76b286b7fd2b3c2ae277dc614b93dbb094cd695e856b73a7deaf6f090f8a\",\"urls\":[\"bzzr://da5e98d7de89b355fdb31ed4a6546c36c0c51acdc3e5b15f4b5ba35269b981d3\"]},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x4ccf2d7b51873db1ccfd54ca2adae5eac3b184f9699911ed4490438419f1c690\",\"urls\":[\"bzzr://1604f5b6d6e916c154efd8c6720cda069e5ba32dfa0a9dedf2b42e5b02d07f89\"]},\"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x852793a3c2f86d336a683b30d688ec3dcfc57451af5a2bf5975cda3b7191a901\",\"urls\":[\"bzzr://07fb42206812a17c1f71e548cfa5cec6f9aa1ae0ca5df870718ca4aa9759d1a5\"]},\"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x90e8c2521653bbb1768b05889c5760031e688d9cd361f167489b89215e201b95\",\"urls\":[\"bzzr://aa8b45b57edafc3d67bc5d916327ea16807fae33f753ca163ae0c4061b789766\"]}},\"version\":1}",
  "bytecode": "0x608060405261ea60600e556103e8600f553480156200001d57600080fd5b506040516200240238038062002402833981018060405260608110156200004357600080fd5b8101908080516401000000008111156200005c57600080fd5b828101905060208101848111156200007357600080fd5b81518560018202830111640100000000821117156200009157600080fd5b50509291906020018051906020019092919080519060200190929190505050828242600e544201600e5442016002600e54024201868660019080519060200190620000de929190620003d9565b50600073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff16141562000183576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f46657374616b696e673a2030206164647265737300000000000000000000000081525060200191505060405180910390fd5b85600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600085116200021f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180620023e06022913960400191505060405180910390fd5b428510156200023557426003819055506200023d565b846003819055505b600354841162000299576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260338152602001806200231e6033913960400191505060405180910390fd5b83600481905550600454831015620002fd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526034815260200180620023ac6034913960400191505060405180910390fd5b82600581905550600554821162000360576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526035815260200180620023516035913960400191505060405180910390fd5b8160068190555060008111620003c2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180620023866026913960400191505060405180910390fd5b806008819055505050505050505050505062000488565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200041c57805160ff19168380011785556200044d565b828001600101855582156200044d579182015b828111156200044c5782518255916020019190600101906200042f565b5b5090506200045c919062000460565b5090565b6200048591905b808211156200048157600081600090555060010162000467565b5090565b90565b611e8680620004986000396000f3fe608060405234801561001057600080fd5b506004361061014d5760003560e01c806375c93bb9116100c3578063a694fc3a1161007c578063a694fc3a146104c7578063aa5c3ab41461050d578063b2ca38fe1461052b578063b410e2a114610549578063d66692a714610567578063eacebf61146105855761014d565b806375c93bb91461038f5780637617aeb0146103df57806390783d4a1461043b5780639cc3c0d4146104455780639d76ea5814610473578063a4413717146104bd5761014d565b80633f7fd60a116101155780633f7fd60a146102a157806342623360146102bf57806344c370d3146103175780635b9f0016146103355780636d68c7d414610353578063750142e6146103715761014d565b806306fdde03146101525780631bbc4b83146101d557806321b13cdf1461021f5780632d5bd0fc1461023d5780632e1a7d4d1461025b575b600080fd5b61015a6105a3565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561019a57808201518184015260208101905061017f565b50505050905090810190601f1680156101c75780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101dd610641565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610227610667565b6040518082815260200191505060405180910390f35b61024561066d565b6040518082815260200191505060405180910390f35b6102876004803603602081101561027157600080fd5b8101908080359060200190929190505050610673565b604051808215151515815260200191505060405180910390f35b6102a96108d8565b6040518082815260200191505060405180910390f35b610301600480360360208110156102d557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506108de565b6040518082815260200191505060405180910390f35b61031f610926565b6040518082815260200191505060405180910390f35b61033d61092c565b6040518082815260200191505060405180910390f35b61035b610932565b6040518082815260200191505060405180910390f35b610379610938565b6040518082815260200191505060405180910390f35b6103c5600480360360408110156103a557600080fd5b81019080803590602001909291908035906020019092919050505061093e565b604051808215151515815260200191505060405180910390f35b610421600480360360208110156103f557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610b10565b604051808215151515815260200191505060405180910390f35b610443610b5c565b005b6104716004803603602081101561045b57600080fd5b8101908080359060200190929190505050610b6b565b005b61047b610b7d565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6104c5610ba3565b005b6104f3600480360360208110156104dd57600080fd5b8101908080359060200190929190505050610bb9565b604051808215151515815260200191505060405180910390f35b610515610cf0565b6040518082815260200191505060405180910390f35b610533610cf6565b6040518082815260200191505060405180910390f35b610551610cfc565b6040518082815260200191505060405180910390f35b61056f610d02565b6040518082815260200191505060405180910390f35b61058d610d08565b6040518082815260200191505060405180910390f35b60018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156106395780601f1061060e57610100808354040283529160200191610639565b820191906000526020600020905b81548152906001019060200180831161061c57829003601f168201915b505050505081565b600d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60055481565b600f5481565b6000600554804210156106d1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526027815260200180611d9d6027913960400191505060405180910390fd5b826000811015610749576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f46657374616b696e673a206e6567617469766520616d6f756e7400000000000081525060200191505060405180910390fd5b33600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156107ed576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f46657374616b696e673a207a65726f206164647265737300000000000000000081525060200191505060405180910390fd5b60003390506000808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548611156108a6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f46657374616b696e673a206e6f7420656e6f7567682062616c616e636500000081525060200191505060405180910390fd5b6006544210156108c2576108ba8187610d0e565b9450506108d0565b6108cc8187610fc1565b9450505b505050919050565b600a5481565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60085481565b600c5481565b60035481565b60095481565b600060055480421061099b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526027815260200180611e346027913960400191505060405180910390fd5b600084116109f4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180611e126022913960400191505060405180910390fd5b6000831015610a4e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526031815260200180611d4b6031913960400191505060405180910390fd5b83831115610aa7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252604e815260200180611dc4604e913960600191505060405180910390fd5b6000339050610ab681866111ea565b610ac4576000925050610b09565b610ad98560095461120090919063ffffffff16565b600981905550600954600b81905550610afd84600a5461120090919063ffffffff16565b600a8190555060019250505b5092915050565b600081600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050919050565b610b69600f544203611288565b565b610b7a81600e54420303611288565b50565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610bb7600f546002600e5402420303611288565b565b6000816000811015610c33576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f46657374616b696e673a206e6567617469766520616d6f756e7400000000000081525060200191505060405180910390fd5b33600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610cd7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f46657374616b696e673a207a65726f206164647265737300000000000000000081525060200191505060405180910390fd5b6000339050610ce681866112b6565b9350505050919050565b600b5481565b600e5481565b60045481565b60075481565b60065481565b600082600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610db4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f46657374616b696e673a207a65726f206164647265737300000000000000000081525060200191505060405180910390fd5b6000610de1600754610dd36004546006546116ce90919063ffffffff16565b61175790919063ffffffff16565b90506000610e3282610e2487610e16600a54610e08600454426116ce90919063ffffffff16565b61175790919063ffffffff16565b61175790919063ffffffff16565b6117dd90919063ffffffff16565b90506000610e49828761120090919063ffffffff16565b9050610e6082600b546116ce90919063ffffffff16565b600b81905550610e7b86600c546116ce90919063ffffffff16565b600c81905550610ed2866000808a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546116ce90919063ffffffff16565b6000808973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610f1e878261186c565b15610fb3578673ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f85ab59351da11b79336de7647172267c33bf533ee87d9d292441c2672177159b8885604051808381526020018281526020019250505060405180910390a35b600194505050505092915050565b600082600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611067576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f46657374616b696e673a207a65726f206164647265737300000000000000000081525060200191505060405180910390fd5b6000611092600c5461108486600b5461175790919063ffffffff16565b6117dd90919063ffffffff16565b905060006110a9828661120090919063ffffffff16565b90506110fc856000808973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546116ce90919063ffffffff16565b6000808873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611148868261186c565b156111dd578573ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f85ab59351da11b79336de7647172267c33bf533ee87d9d292441c2672177159b8785604051808381526020018281526020019250505060405180910390a35b6001935050505092915050565b60006111f883303085611a36565b905092915050565b60008082840190508381101561127e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b80600381905550600e548101600481905550600e5481016005819055506002600e5402810160068190555050565b600060035480421015611314576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526027815260200180611d9d6027913960400191505060405180910390fd5b60045480421061136f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526027815260200180611e346027913960400191505060405180910390fd5b8360008110156113e7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f46657374616b696e673a206e6567617469766520616d6f756e7400000000000081525060200191505060405180910390fd5b6000859050611403600c546008546116ce90919063ffffffff16565b81111561142457611421600c546008546116ce90919063ffffffff16565b90505b6000811161149a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f5374616b696e67206361702069732066696c6c6564000000000000000000000081525060200191505060405180910390fd5b6114a487826111ea565b6114b25760009450506116c5565b8673ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f6c86f3fd5118b3aa8bb4f389a617046de0a3d3d477de1a1673d227f802f616dc8884604051808381526020018281526020019250505060405180910390a361155681600c5461120090919063ffffffff16565b600c819055506115718160075461120090919063ffffffff16565b6007819055506115c8816000808a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461120090919063ffffffff16565b6000808973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550858110156116bf57600061162782886116ce90919063ffffffff16565b905061163588308a84611a36565b508773ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fec1e5ed733e00f1a00915d56caef57b4f52312dde4f9b3165f213319a0da156b836040518082815260200191505060405180910390a3505b60019450505b50505092915050565b600082821115611746576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525060200191505060405180910390fd5b600082840390508091505092915050565b60008083141561176a57600090506117d7565b600082840290508284828161177b57fe5b04146117d2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180611d7c6021913960400191505060405180910390fd5b809150505b92915050565b6000808211611854576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f536166654d6174683a206469766973696f6e206279207a65726f00000000000081525060200191505060405180910390fd5b600082848161185f57fe5b0490508091505092915050565b60008160008110156118e6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f46657374616b696e673a206e6567617469766520616d6f756e7400000000000081525060200191505060405180910390fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600d60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb85856040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b1580156119f257600080fd5b505af1158015611a06573d6000803e3d6000fd5b505050506040513d6020811015611a1c57600080fd5b810190808051906020019092919050505091505092915050565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600d60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e87876040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060206040518083038186803b158015611b7057600080fd5b505afa158015611b84573d6000803e3d6000fd5b505050506040513d6020811015611b9a57600080fd5b8101908080519060200190929190505050905080831115611c06576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180611d2a6021913960400191505060405180910390fd5b600d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd8786866040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b158015611ce357600080fd5b505af1158015611cf7573d6000803e3d6000fd5b505050506040513d6020811015611d0d57600080fd5b810190808051906020019092919050505091505094935050505056fe4d616b65207375726520746f2061646420656e6f75676820616c6c6f77616e636546657374616b696e673a20776974686472617761626c6520616d6f756e742063616e6e6f74206265206e65676174697665536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f7746657374616b696e673a206261642074696d696e6720666f72207468652072657175657374203146657374616b696e673a20776974686472617761626c6520616d6f756e74206d757374206265206c657373207468616e206f7220657175616c20746f207468652072657761726420616d6f756e7446657374616b696e673a20726577617264206d75737420626520706f73697469766546657374616b696e673a206261642074696d696e6720666f722074686520726571756573742032a165627a7a7230582097c8e6b36f492b084227c5dd988ecb6e2b07ee37ab4aa26dde793eec266bed4e002946657374616b696e673a207374616b696e6720656e64206d757374206265206166746572207374616b696e672073746172747346657374616b696e673a207769746864726177456e6473206d7573742062652061667465722077697468647261772073746172747346657374616b696e673a207374616b696e67436170206d75737420626520706f73697469766546657374616b696e673a207769746864726177537461727473206d757374206265206166746572207374616b696e6720656e647346657374616b696e673a207a65726f207374616b696e672073746172742074696d65",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061014d5760003560e01c806375c93bb9116100c3578063a694fc3a1161007c578063a694fc3a146104c7578063aa5c3ab41461050d578063b2ca38fe1461052b578063b410e2a114610549578063d66692a714610567578063eacebf61146105855761014d565b806375c93bb91461038f5780637617aeb0146103df57806390783d4a1461043b5780639cc3c0d4146104455780639d76ea5814610473578063a4413717146104bd5761014d565b80633f7fd60a116101155780633f7fd60a146102a157806342623360146102bf57806344c370d3146103175780635b9f0016146103355780636d68c7d414610353578063750142e6146103715761014d565b806306fdde03146101525780631bbc4b83146101d557806321b13cdf1461021f5780632d5bd0fc1461023d5780632e1a7d4d1461025b575b600080fd5b61015a6105a3565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561019a57808201518184015260208101905061017f565b50505050905090810190601f1680156101c75780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101dd610641565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610227610667565b6040518082815260200191505060405180910390f35b61024561066d565b6040518082815260200191505060405180910390f35b6102876004803603602081101561027157600080fd5b8101908080359060200190929190505050610673565b604051808215151515815260200191505060405180910390f35b6102a96108d8565b6040518082815260200191505060405180910390f35b610301600480360360208110156102d557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506108de565b6040518082815260200191505060405180910390f35b61031f610926565b6040518082815260200191505060405180910390f35b61033d61092c565b6040518082815260200191505060405180910390f35b61035b610932565b6040518082815260200191505060405180910390f35b610379610938565b6040518082815260200191505060405180910390f35b6103c5600480360360408110156103a557600080fd5b81019080803590602001909291908035906020019092919050505061093e565b604051808215151515815260200191505060405180910390f35b610421600480360360208110156103f557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610b10565b604051808215151515815260200191505060405180910390f35b610443610b5c565b005b6104716004803603602081101561045b57600080fd5b8101908080359060200190929190505050610b6b565b005b61047b610b7d565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6104c5610ba3565b005b6104f3600480360360208110156104dd57600080fd5b8101908080359060200190929190505050610bb9565b604051808215151515815260200191505060405180910390f35b610515610cf0565b6040518082815260200191505060405180910390f35b610533610cf6565b6040518082815260200191505060405180910390f35b610551610cfc565b6040518082815260200191505060405180910390f35b61056f610d02565b6040518082815260200191505060405180910390f35b61058d610d08565b6040518082815260200191505060405180910390f35b60018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156106395780601f1061060e57610100808354040283529160200191610639565b820191906000526020600020905b81548152906001019060200180831161061c57829003601f168201915b505050505081565b600d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60055481565b600f5481565b6000600554804210156106d1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526027815260200180611d9d6027913960400191505060405180910390fd5b826000811015610749576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f46657374616b696e673a206e6567617469766520616d6f756e7400000000000081525060200191505060405180910390fd5b33600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156107ed576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f46657374616b696e673a207a65726f206164647265737300000000000000000081525060200191505060405180910390fd5b60003390506000808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548611156108a6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f46657374616b696e673a206e6f7420656e6f7567682062616c616e636500000081525060200191505060405180910390fd5b6006544210156108c2576108ba8187610d0e565b9450506108d0565b6108cc8187610fc1565b9450505b505050919050565b600a5481565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60085481565b600c5481565b60035481565b60095481565b600060055480421061099b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526027815260200180611e346027913960400191505060405180910390fd5b600084116109f4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180611e126022913960400191505060405180910390fd5b6000831015610a4e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526031815260200180611d4b6031913960400191505060405180910390fd5b83831115610aa7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252604e815260200180611dc4604e913960600191505060405180910390fd5b6000339050610ab681866111ea565b610ac4576000925050610b09565b610ad98560095461120090919063ffffffff16565b600981905550600954600b81905550610afd84600a5461120090919063ffffffff16565b600a8190555060019250505b5092915050565b600081600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050919050565b610b69600f544203611288565b565b610b7a81600e54420303611288565b50565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610bb7600f546002600e5402420303611288565b565b6000816000811015610c33576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f46657374616b696e673a206e6567617469766520616d6f756e7400000000000081525060200191505060405180910390fd5b33600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610cd7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f46657374616b696e673a207a65726f206164647265737300000000000000000081525060200191505060405180910390fd5b6000339050610ce681866112b6565b9350505050919050565b600b5481565b600e5481565b60045481565b60075481565b60065481565b600082600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610db4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f46657374616b696e673a207a65726f206164647265737300000000000000000081525060200191505060405180910390fd5b6000610de1600754610dd36004546006546116ce90919063ffffffff16565b61175790919063ffffffff16565b90506000610e3282610e2487610e16600a54610e08600454426116ce90919063ffffffff16565b61175790919063ffffffff16565b61175790919063ffffffff16565b6117dd90919063ffffffff16565b90506000610e49828761120090919063ffffffff16565b9050610e6082600b546116ce90919063ffffffff16565b600b81905550610e7b86600c546116ce90919063ffffffff16565b600c81905550610ed2866000808a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546116ce90919063ffffffff16565b6000808973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610f1e878261186c565b15610fb3578673ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f85ab59351da11b79336de7647172267c33bf533ee87d9d292441c2672177159b8885604051808381526020018281526020019250505060405180910390a35b600194505050505092915050565b600082600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611067576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f46657374616b696e673a207a65726f206164647265737300000000000000000081525060200191505060405180910390fd5b6000611092600c5461108486600b5461175790919063ffffffff16565b6117dd90919063ffffffff16565b905060006110a9828661120090919063ffffffff16565b90506110fc856000808973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546116ce90919063ffffffff16565b6000808873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611148868261186c565b156111dd578573ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f85ab59351da11b79336de7647172267c33bf533ee87d9d292441c2672177159b8785604051808381526020018281526020019250505060405180910390a35b6001935050505092915050565b60006111f883303085611a36565b905092915050565b60008082840190508381101561127e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b80600381905550600e548101600481905550600e5481016005819055506002600e5402810160068190555050565b600060035480421015611314576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526027815260200180611d9d6027913960400191505060405180910390fd5b60045480421061136f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526027815260200180611e346027913960400191505060405180910390fd5b8360008110156113e7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f46657374616b696e673a206e6567617469766520616d6f756e7400000000000081525060200191505060405180910390fd5b6000859050611403600c546008546116ce90919063ffffffff16565b81111561142457611421600c546008546116ce90919063ffffffff16565b90505b6000811161149a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f5374616b696e67206361702069732066696c6c6564000000000000000000000081525060200191505060405180910390fd5b6114a487826111ea565b6114b25760009450506116c5565b8673ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f6c86f3fd5118b3aa8bb4f389a617046de0a3d3d477de1a1673d227f802f616dc8884604051808381526020018281526020019250505060405180910390a361155681600c5461120090919063ffffffff16565b600c819055506115718160075461120090919063ffffffff16565b6007819055506115c8816000808a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461120090919063ffffffff16565b6000808973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550858110156116bf57600061162782886116ce90919063ffffffff16565b905061163588308a84611a36565b508773ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fec1e5ed733e00f1a00915d56caef57b4f52312dde4f9b3165f213319a0da156b836040518082815260200191505060405180910390a3505b60019450505b50505092915050565b600082821115611746576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525060200191505060405180910390fd5b600082840390508091505092915050565b60008083141561176a57600090506117d7565b600082840290508284828161177b57fe5b04146117d2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180611d7c6021913960400191505060405180910390fd5b809150505b92915050565b6000808211611854576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f536166654d6174683a206469766973696f6e206279207a65726f00000000000081525060200191505060405180910390fd5b600082848161185f57fe5b0490508091505092915050565b60008160008110156118e6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f46657374616b696e673a206e6567617469766520616d6f756e7400000000000081525060200191505060405180910390fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600d60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb85856040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b1580156119f257600080fd5b505af1158015611a06573d6000803e3d6000fd5b505050506040513d6020811015611a1c57600080fd5b810190808051906020019092919050505091505092915050565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600d60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e87876040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060206040518083038186803b158015611b7057600080fd5b505afa158015611b84573d6000803e3d6000fd5b505050506040513d6020811015611b9a57600080fd5b8101908080519060200190929190505050905080831115611c06576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180611d2a6021913960400191505060405180910390fd5b600d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd8786866040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b158015611ce357600080fd5b505af1158015611cf7573d6000803e3d6000fd5b505050506040513d6020811015611d0d57600080fd5b810190808051906020019092919050505091505094935050505056fe4d616b65207375726520746f2061646420656e6f75676820616c6c6f77616e636546657374616b696e673a20776974686472617761626c6520616d6f756e742063616e6e6f74206265206e65676174697665536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f7746657374616b696e673a206261642074696d696e6720666f72207468652072657175657374203146657374616b696e673a20776974686472617761626c6520616d6f756e74206d757374206265206c657373207468616e206f7220657175616c20746f207468652072657761726420616d6f756e7446657374616b696e673a20726577617264206d75737420626520706f73697469766546657374616b696e673a206261642074696d696e6720666f722074686520726571756573742032a165627a7a7230582097c8e6b36f492b084227c5dd988ecb6e2b07ee37ab4aa26dde793eec266bed4e0029",
  "sourceMap": "51:790:2:-;;;111:5;93:23;;140:4;122:22;;151:199;8:9:-1;5:2;;;30:1;27;20:12;5:2;151:199:2;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;151:199:2;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;71:11;66:3;62:21;55:28;;123:4;118:3;114:14;159:9;141:16;138:31;135:2;;;182:1;179;172:12;135:2;219:3;213:10;330:9;325:1;311:12;307:20;289:16;285:43;282:58;261:11;247:12;244:29;233:115;230:2;;;361:1;358;351:12;230:2;0:372;;151:199:2;;;;;;;;;;;;;;;;;;;;;;;;;;259:5;266:13;281:3;292;;286;:9;303:3;;297;:9;320:1;314:3;;:7;308:3;:13;323:11;1226:5:1;1219:4;:12;;;;;;;;;;;;:::i;:::-;;1274:1;1249:27;;:13;:27;;;;1241:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1326:13;1311:12;;:28;;;;;;;;;;;;;;;;;;1375:1;1358:14;:18;1350:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1446:3;1429:14;:20;1425:131;;;1481:3;1465:13;:19;;;;1425:131;;;1531:14;1515:13;:30;;;;1425:131;1589:13;;1574:12;:28;1566:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1682:12;1668:11;:26;;;;1732:11;;1713:15;:30;;1705:95;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1827:15;1810:14;:32;;;;1877:14;;1861:13;:30;1853:96;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1974:13;1959:12;:28;;;;2020:1;2006:11;:15;1998:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2087:11;2074:10;:24;;;;994:1111;;;;;;;151:199:2;;;51:790;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "51:790:2:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;51:790:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;259:18:1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;259:18:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;643:27;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;377:26;;;:::i;:::-;;;;;;;;;;;;;;;;;;;122:22:2;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3365:423:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3365:423:1;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;534:34;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2986:104;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2986:104:1;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;471:25;;;:::i;:::-;;;;;;;;;;;;;;;;;;;608:28;;;:::i;:::-;;;;;;;;;;;;;;;;;;;317:25;;;:::i;:::-;;;;;;;;;;;;;;;;;;;502:26;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2242:738;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2242:738:1;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2111:125;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2111:125:1;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;356:78:2;;;:::i;:::-;;440:106;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;440:106:2;;;;;;;;;;;;;;;;;:::i;:::-;;283:28:1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;552:90:2;;;:::i;:::-;;3168:191:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3168:191:1;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;574:28;;;:::i;:::-;;;;;;;;;;;;;;;;;;;93:23:2;;;:::i;:::-;;;;;;;;;;;;;;;;;;;348::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;439:26;;;:::i;:::-;;;;;;;;;;;;;;;;;;;409:24;;;:::i;:::-;;;;;;;;;;;;;;;;;;;259:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;643:27::-;;;;;;;;;;;;;:::o;377:26::-;;;;:::o;122:22:2:-;;;;:::o;3365:423:1:-;3501:4;3421:14;;7263:9;7256:3;:16;;7248:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3451:6;7150:1;7140:6;:11;;7132:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3476:10;7033:1;7017:18;;:4;:18;;;;7009:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3517:12;3532:10;3517:25;;3570:7;:13;3578:4;3570:13;;;;;;;;;;;;;;;;3560:6;:23;;3552:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3637:12;;3631:3;:18;3627:155;;;3672:28;3687:4;3693:6;3672:14;:28::i;:::-;3665:35;;;;;3627:155;3738:33;3758:4;3764:6;3738:19;:33::i;:::-;3731:40;;;7073:1;7192;7326;3365:423;;;;:::o;534:34::-;;;;:::o;2986:104::-;3041:7;3067;:16;3075:7;3067:16;;;;;;;;;;;;;;;;3060:23;;2986:104;;;:::o;471:25::-;;;;:::o;608:28::-;;;;:::o;317:25::-;;;;:::o;502:26::-;;;;:::o;2242:738::-;2363:4;2334:14;;7397:9;7391:3;:15;7383:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2402:1;2387:12;:16;2379:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2482:1;2460:18;:23;;2452:85;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2577:12;2555:18;:34;;2547:125;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2682:12;2697:10;2682:25;;2722:26;2729:4;2735:12;2722:6;:26::i;:::-;2717:70;;2771:5;2764:12;;;;;2717:70;2811:29;2827:12;2811:11;;:15;;:29;;;;:::i;:::-;2797:11;:43;;;;2866:11;;2850:13;:27;;;;2909:43;2933:18;2909:19;;:23;;:43;;;;:::i;:::-;2887:19;:65;;;;2969:4;2962:11;;;7460:1;2242:738;;;;;:::o;2111:125::-;2172:4;2203:5;2188:12;;:20;;;;;;;;;;;;;;;;;;2225:4;2218:11;;2111:125;;;:::o;356:78:2:-;401:26;423:3;;417;:9;401:15;:26::i;:::-;356:78::o;440:106::-;504:35;532:6;526:3;;520;:9;:18;504:15;:35::i;:::-;440:106;:::o;283:28:1:-;;;;;;;;;;;;;:::o;552:90:2:-;599:36;631:3;;627:1;621:3;;:7;615:3;:13;:19;599:15;:36::i;:::-;552:90::o;3168:191:1:-;3274:4;3224:6;7150:1;7140:6;:11;;7132:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3249:10;7033:1;7017:18;;:4;:18;;;;7009:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3290:12;3305:10;3290:25;;3332:20;3339:4;3345:6;3332;:20::i;:::-;3325:27;;;7192:1;3168:191;;;;:::o;574:28::-;;;;:::o;93:23:2:-;;;;:::o;348::1:-;;;;:::o;439:26::-;;;;:::o;409:24::-;;;;:::o;3794:822::-;3896:4;3877;7033:1;7017:18;;:4;:18;;;;7009:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4093:13;4109:48;4145:11;;4110:29;4127:11;;4110:12;;:16;;:29;;;;:::i;:::-;4109:35;;:48;;;;:::i;:::-;4093:64;;4167:14;4184:94;4272:5;4194:63;4250:6;4196:47;4223:19;;4197:20;4205:11;;4197:3;:7;;:20;;;;:::i;:::-;4196:26;;:47;;;;:::i;:::-;4194:55;;:63;;;;:::i;:::-;4184:87;;:94;;;;:::i;:::-;4167:111;;4288:14;4305:18;4316:6;4305;:10;;:18;;;;:::i;:::-;4288:35;;4349:25;4367:6;4349:13;;:17;;:25;;;;:::i;:::-;4333:13;:41;;;;4400:25;4418:6;4400:13;;:17;;:25;;;;:::i;:::-;4384:13;:41;;;;4451:25;4469:6;4451:7;:13;4459:4;4451:13;;;;;;;;;;;;;;;;:17;;:25;;;;:::i;:::-;4435:7;:13;4443:4;4435:13;;;;;;;;;;;;;;;:41;;;;4490:24;4501:4;4507:6;4490:10;:24::i;:::-;4486:103;;;4557:4;4535:43;;4543:12;;;;;;;;;;;4535:43;;;4563:6;4571;4535:43;;;;;;;;;;;;;;;;;;;;;;;;4486:103;4605:4;4598:11;;;;;3794:822;;;;;:::o;4622:422::-;4729:4;4710;7033:1;7017:18;;:4;:18;;;;7009:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4745:14;4762:46;4794:13;;4763:25;4781:6;4763:13;;:17;;:25;;;;:::i;:::-;4762:31;;:46;;;;:::i;:::-;4745:63;;4818:14;4835:18;4846:6;4835;:10;;:18;;;;:::i;:::-;4818:35;;4879:25;4897:6;4879:7;:13;4887:4;4879:13;;;;;;;;;;;;;;;;:17;;:25;;;;:::i;:::-;4863:7;:13;4871:4;4863:13;;;;;;;;;;;;;;;:41;;;;4918:24;4929:4;4935:6;4918:10;:24::i;:::-;4914:103;;;4985:4;4963:43;;4971:12;;;;;;;;;;;4963:43;;;4991:6;4999;4963:43;;;;;;;;;;;;;;;;;;;;;;;;4914:103;5033:4;5026:11;;;;4622:422;;;;;:::o;6105:153::-;6177:4;6200:51;6207:5;6222:4;6237;6244:6;6200;:51::i;:::-;6193:58;;6105:153;;;;:::o;834:176:4:-;892:7;911:9;927:1;923;:5;911:17;;951:1;946;:6;;938:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1002:1;995:8;;;834:176;;;;:::o;648:191:2:-;718:4;702:13;:20;;;;753:3;;746:4;:10;732:11;:24;;;;790:3;;783:4;:10;766:14;:27;;;;831:1;825:3;;:7;818:4;:14;803:12;:29;;;;648:191;:::o;5050:1049:1:-;5196:4;5121:13;;7263:9;7256:3;:16;;7248:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5148:11;;7397:9;7391:3;:15;7383:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5175:6;7150:1;7140:6;:11;;7132:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5263:17;5283:6;5263:26;;5316:29;5331:13;;5316:10;;:14;;:29;;;;:::i;:::-;5303:9;:43;5299:115;;;5374:29;5389:13;;5374:10;;:14;;:29;;;;:::i;:::-;5362:41;;5299:115;5443:1;5431:9;:13;5423:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5485:25;5492:6;5500:9;5485:6;:25::i;:::-;5480:69;;5533:5;5526:12;;;;;5480:69;5584:6;5563:47;;5570:12;;;;;;;;;;;5563:47;;;5592:6;5600:9;5563:47;;;;;;;;;;;;;;;;;;;;;;;;5670:28;5688:9;5670:13;;:17;;:28;;;;:::i;:::-;5654:13;:44;;;;5722:26;5738:9;5722:11;;:15;;:26;;;;:::i;:::-;5708:11;:40;;;;5776:30;5796:9;5776:7;:15;5784:6;5776:15;;;;;;;;;;;;;;;;:19;;:30;;;;:::i;:::-;5758:7;:15;5766:6;5758:15;;;;;;;;;;;;;;;:48;;;;5833:6;5821:9;:18;5817:255;;;5907:14;5924:21;5935:9;5924:6;:10;;:21;;;;:::i;:::-;5907:38;;5959:45;5966:6;5982:4;5989:6;5997;5959;:45::i;:::-;;6046:6;6023:38;;6032:12;;;;;;;;;;;6023:38;;;6054:6;6023:38;;;;;;;;;;;;;;;;;;5817:255;;6088:4;6081:11;;;7192:1;7460;7326;5050:1049;;;;;:::o;1274:179:4:-;1332:7;1364:1;1359;:6;;1351:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1410:9;1426:1;1422;:5;1410:17;;1445:1;1438:8;;;1274:179;;;;:::o;1693:458::-;1751:7;1996:1;1991;:6;1987:45;;;2020:1;2013:8;;;;1987:45;2042:9;2058:1;2054;:5;2042:17;;2086:1;2081;2077;:5;;;;;;:10;2069:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2143:1;2136:8;;;1693:458;;;;;:::o;2606:326::-;2664:7;2761:1;2757;:5;2749:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2803:9;2819:1;2815;:5;;;;;;2803:17;;2924:1;2917:8;;;2606:326;;;;:::o;6751:206:1:-;6846:4;6825:6;7150:1;7140:6;:11;;7132:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6885:12;;;;;;;;;;;6862:14;;:36;;;;;;;;;;;;;;;;;;6915:14;;;;;;;;;;;:23;;;6939:2;6943:6;6915:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6915:35:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6915:35:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6915:35:1;;;;;;;;;;;;;;;;6908:42;;6751:206;;;;;:::o;6264:481::-;6371:4;6503:12;;;;;;;;;;;6480:14;;:36;;;;;;;;;;;;;;;;;;6526:20;6549:14;;;;;;;;;;;:24;;;6574:7;6583:5;6549:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6549:40:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6549:40:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6549:40:1;;;;;;;;;;;;;;;;6526:63;;6617:12;6607:6;:22;;6599:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6684:14;;;;;;;;;;;:27;;;6712:7;6721:8;6731:6;6684:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6684:54:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6684:54:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6684:54:1;;;;;;;;;;;;;;;;6677:61;;;6264:481;;;;;;:::o",
  "source": "pragma solidity ^0.5.8;\nimport \"./Festaking.sol\";\n\ncontract FestakingTest is Festaking {\n    uint public GAP = 60000;\n    uint public SEC = 1000;\n\n    constructor (string memory name_,\n        address tokenAddress_,\n        uint256 stakingCap_)\n    Festaking(name_, tokenAddress_, now, now + GAP, now + GAP, now + GAP * 2, stakingCap_)\n    public { }\n\n    function setStakingPeriod() public {\n        setStakingStart(now - SEC);\n    }\n\n    function setEarlyWithdrawalPeriod(uint offset) public {\n        setStakingStart(now - GAP - offset);\n    }\n\n    function setAfterWithdrawal() public {\n        setStakingStart(now - GAP * 2 - SEC);\n    }\n\n    function setStakingStart(uint time) private {\n        stakingStarts = time;\n        stakingEnds = time + GAP;\n        withdrawStarts = time + GAP;\n        withdrawEnds = time + GAP * 2;\n    }\n}\n",
  "sourcePath": "/Users/wycliffkasirye/Desktop/projects/frm-ethereum-contracts/contracts/FestakingTest.sol",
  "ast": {
    "absolutePath": "/Users/wycliffkasirye/Desktop/projects/frm-ethereum-contracts/contracts/FestakingTest.sol",
    "exportedSymbols": {
      "FestakingTest": [
        874
      ]
    },
    "id": 875,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 769,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".8"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:2"
      },
      {
        "absolutePath": "/Users/wycliffkasirye/Desktop/projects/frm-ethereum-contracts/contracts/Festaking.sol",
        "file": "./Festaking.sol",
        "id": 770,
        "nodeType": "ImportDirective",
        "scope": 875,
        "sourceUnit": 768,
        "src": "24:25:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 771,
              "name": "Festaking",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 767,
              "src": "77:9:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Festaking_$767",
                "typeString": "contract Festaking"
              }
            },
            "id": 772,
            "nodeType": "InheritanceSpecifier",
            "src": "77:9:2"
          }
        ],
        "contractDependencies": [
          767
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 874,
        "linearizedBaseContracts": [
          874,
          767
        ],
        "name": "FestakingTest",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 775,
            "name": "GAP",
            "nodeType": "VariableDeclaration",
            "scope": 874,
            "src": "93:23:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 773,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "93:4:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "3630303030",
              "id": 774,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "111:5:2",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_60000_by_1",
                "typeString": "int_const 60000"
              },
              "value": "60000"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 778,
            "name": "SEC",
            "nodeType": "VariableDeclaration",
            "scope": 874,
            "src": "122:22:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 776,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "122:4:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "31303030",
              "id": 777,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "140:4:2",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1000_by_1",
                "typeString": "int_const 1000"
              },
              "value": "1000"
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 804,
              "nodeType": "Block",
              "src": "347:3:2",
              "statements": []
            },
            "documentation": null,
            "id": 805,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 787,
                    "name": "name_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 780,
                    "src": "259:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 788,
                    "name": "tokenAddress_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 782,
                    "src": "266:13:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 789,
                    "name": "now",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1578,
                    "src": "281:3:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 792,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 790,
                      "name": "now",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1578,
                      "src": "286:3:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 791,
                      "name": "GAP",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 775,
                      "src": "292:3:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "286:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 795,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 793,
                      "name": "now",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1578,
                      "src": "297:3:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 794,
                      "name": "GAP",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 775,
                      "src": "303:3:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "297:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 800,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 796,
                      "name": "now",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1578,
                      "src": "308:3:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 799,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 797,
                        "name": "GAP",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 775,
                        "src": "314:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "32",
                        "id": 798,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "320:1:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "src": "314:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "308:13:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 801,
                    "name": "stakingCap_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 784,
                    "src": "323:11:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 802,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 786,
                  "name": "Festaking",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 767,
                  "src": "249:9:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Festaking_$767_$",
                    "typeString": "type(contract Festaking)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "249:86:2"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 785,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 780,
                  "name": "name_",
                  "nodeType": "VariableDeclaration",
                  "scope": 805,
                  "src": "164:19:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 779,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "164:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 782,
                  "name": "tokenAddress_",
                  "nodeType": "VariableDeclaration",
                  "scope": 805,
                  "src": "193:21:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 781,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "193:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 784,
                  "name": "stakingCap_",
                  "nodeType": "VariableDeclaration",
                  "scope": 805,
                  "src": "224:19:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 783,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "224:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "163:81:2"
            },
            "returnParameters": {
              "id": 803,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "347:0:2"
            },
            "scope": 874,
            "src": "151:199:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 814,
              "nodeType": "Block",
              "src": "391:43:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 811,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 809,
                          "name": "now",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1578,
                          "src": "417:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 810,
                          "name": "SEC",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 778,
                          "src": "423:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "417:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 808,
                      "name": "setStakingStart",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 873,
                      "src": "401:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 812,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "401:26:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 813,
                  "nodeType": "ExpressionStatement",
                  "src": "401:26:2"
                }
              ]
            },
            "documentation": null,
            "id": 815,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setStakingPeriod",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 806,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "381:2:2"
            },
            "returnParameters": {
              "id": 807,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "391:0:2"
            },
            "scope": 874,
            "src": "356:78:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 828,
              "nodeType": "Block",
              "src": "494:52:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 825,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 823,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 821,
                            "name": "now",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1578,
                            "src": "520:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 822,
                            "name": "GAP",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 775,
                            "src": "526:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "520:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 824,
                          "name": "offset",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 817,
                          "src": "532:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "520:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 820,
                      "name": "setStakingStart",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 873,
                      "src": "504:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 826,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "504:35:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 827,
                  "nodeType": "ExpressionStatement",
                  "src": "504:35:2"
                }
              ]
            },
            "documentation": null,
            "id": 829,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setEarlyWithdrawalPeriod",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 818,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 817,
                  "name": "offset",
                  "nodeType": "VariableDeclaration",
                  "scope": 829,
                  "src": "474:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 816,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "474:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "473:13:2"
            },
            "returnParameters": {
              "id": 819,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "494:0:2"
            },
            "scope": 874,
            "src": "440:106:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 842,
              "nodeType": "Block",
              "src": "589:53:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 839,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 837,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 833,
                            "name": "now",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1578,
                            "src": "615:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 836,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "id": 834,
                              "name": "GAP",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 775,
                              "src": "621:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "argumentTypes": null,
                              "hexValue": "32",
                              "id": 835,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "627:1:2",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            },
                            "src": "621:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "615:13:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 838,
                          "name": "SEC",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 778,
                          "src": "631:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "615:19:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 832,
                      "name": "setStakingStart",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 873,
                      "src": "599:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 840,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "599:36:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 841,
                  "nodeType": "ExpressionStatement",
                  "src": "599:36:2"
                }
              ]
            },
            "documentation": null,
            "id": 843,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setAfterWithdrawal",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 830,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "579:2:2"
            },
            "returnParameters": {
              "id": 831,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "589:0:2"
            },
            "scope": 874,
            "src": "552:90:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 872,
              "nodeType": "Block",
              "src": "692:147:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 850,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 848,
                      "name": "stakingStarts",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46,
                      "src": "702:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 849,
                      "name": "time",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 845,
                      "src": "718:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "702:20:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 851,
                  "nodeType": "ExpressionStatement",
                  "src": "702:20:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 856,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 852,
                      "name": "stakingEnds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48,
                      "src": "732:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 855,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 853,
                        "name": "time",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 845,
                        "src": "746:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 854,
                        "name": "GAP",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 775,
                        "src": "753:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "746:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "732:24:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 857,
                  "nodeType": "ExpressionStatement",
                  "src": "732:24:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 862,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 858,
                      "name": "withdrawStarts",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50,
                      "src": "766:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 861,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 859,
                        "name": "time",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 845,
                        "src": "783:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 860,
                        "name": "GAP",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 775,
                        "src": "790:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "783:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "766:27:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 863,
                  "nodeType": "ExpressionStatement",
                  "src": "766:27:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 870,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 864,
                      "name": "withdrawEnds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 52,
                      "src": "803:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 869,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 865,
                        "name": "time",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 845,
                        "src": "818:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 868,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 866,
                          "name": "GAP",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 775,
                          "src": "825:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "32",
                          "id": 867,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "831:1:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "src": "825:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "818:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "803:29:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 871,
                  "nodeType": "ExpressionStatement",
                  "src": "803:29:2"
                }
              ]
            },
            "documentation": null,
            "id": 873,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setStakingStart",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 846,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 845,
                  "name": "time",
                  "nodeType": "VariableDeclaration",
                  "scope": 873,
                  "src": "673:9:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 844,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "673:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "672:11:2"
            },
            "returnParameters": {
              "id": 847,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "692:0:2"
            },
            "scope": 874,
            "src": "648:191:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "private"
          }
        ],
        "scope": 875,
        "src": "51:790:2"
      }
    ],
    "src": "0:842:2"
  },
  "legacyAST": {
    "absolutePath": "/Users/wycliffkasirye/Desktop/projects/frm-ethereum-contracts/contracts/FestakingTest.sol",
    "exportedSymbols": {
      "FestakingTest": [
        874
      ]
    },
    "id": 875,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 769,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".8"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:2"
      },
      {
        "absolutePath": "/Users/wycliffkasirye/Desktop/projects/frm-ethereum-contracts/contracts/Festaking.sol",
        "file": "./Festaking.sol",
        "id": 770,
        "nodeType": "ImportDirective",
        "scope": 875,
        "sourceUnit": 768,
        "src": "24:25:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 771,
              "name": "Festaking",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 767,
              "src": "77:9:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Festaking_$767",
                "typeString": "contract Festaking"
              }
            },
            "id": 772,
            "nodeType": "InheritanceSpecifier",
            "src": "77:9:2"
          }
        ],
        "contractDependencies": [
          767
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 874,
        "linearizedBaseContracts": [
          874,
          767
        ],
        "name": "FestakingTest",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 775,
            "name": "GAP",
            "nodeType": "VariableDeclaration",
            "scope": 874,
            "src": "93:23:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 773,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "93:4:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "3630303030",
              "id": 774,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "111:5:2",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_60000_by_1",
                "typeString": "int_const 60000"
              },
              "value": "60000"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 778,
            "name": "SEC",
            "nodeType": "VariableDeclaration",
            "scope": 874,
            "src": "122:22:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 776,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "122:4:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "31303030",
              "id": 777,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "140:4:2",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1000_by_1",
                "typeString": "int_const 1000"
              },
              "value": "1000"
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 804,
              "nodeType": "Block",
              "src": "347:3:2",
              "statements": []
            },
            "documentation": null,
            "id": 805,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 787,
                    "name": "name_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 780,
                    "src": "259:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 788,
                    "name": "tokenAddress_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 782,
                    "src": "266:13:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 789,
                    "name": "now",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1578,
                    "src": "281:3:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 792,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 790,
                      "name": "now",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1578,
                      "src": "286:3:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 791,
                      "name": "GAP",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 775,
                      "src": "292:3:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "286:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 795,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 793,
                      "name": "now",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1578,
                      "src": "297:3:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 794,
                      "name": "GAP",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 775,
                      "src": "303:3:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "297:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 800,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 796,
                      "name": "now",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1578,
                      "src": "308:3:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 799,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 797,
                        "name": "GAP",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 775,
                        "src": "314:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "32",
                        "id": 798,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "320:1:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "src": "314:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "308:13:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 801,
                    "name": "stakingCap_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 784,
                    "src": "323:11:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 802,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 786,
                  "name": "Festaking",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 767,
                  "src": "249:9:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Festaking_$767_$",
                    "typeString": "type(contract Festaking)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "249:86:2"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 785,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 780,
                  "name": "name_",
                  "nodeType": "VariableDeclaration",
                  "scope": 805,
                  "src": "164:19:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 779,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "164:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 782,
                  "name": "tokenAddress_",
                  "nodeType": "VariableDeclaration",
                  "scope": 805,
                  "src": "193:21:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 781,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "193:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 784,
                  "name": "stakingCap_",
                  "nodeType": "VariableDeclaration",
                  "scope": 805,
                  "src": "224:19:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 783,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "224:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "163:81:2"
            },
            "returnParameters": {
              "id": 803,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "347:0:2"
            },
            "scope": 874,
            "src": "151:199:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 814,
              "nodeType": "Block",
              "src": "391:43:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 811,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 809,
                          "name": "now",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1578,
                          "src": "417:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 810,
                          "name": "SEC",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 778,
                          "src": "423:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "417:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 808,
                      "name": "setStakingStart",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 873,
                      "src": "401:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 812,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "401:26:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 813,
                  "nodeType": "ExpressionStatement",
                  "src": "401:26:2"
                }
              ]
            },
            "documentation": null,
            "id": 815,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setStakingPeriod",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 806,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "381:2:2"
            },
            "returnParameters": {
              "id": 807,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "391:0:2"
            },
            "scope": 874,
            "src": "356:78:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 828,
              "nodeType": "Block",
              "src": "494:52:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 825,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 823,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 821,
                            "name": "now",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1578,
                            "src": "520:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 822,
                            "name": "GAP",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 775,
                            "src": "526:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "520:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 824,
                          "name": "offset",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 817,
                          "src": "532:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "520:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 820,
                      "name": "setStakingStart",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 873,
                      "src": "504:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 826,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "504:35:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 827,
                  "nodeType": "ExpressionStatement",
                  "src": "504:35:2"
                }
              ]
            },
            "documentation": null,
            "id": 829,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setEarlyWithdrawalPeriod",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 818,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 817,
                  "name": "offset",
                  "nodeType": "VariableDeclaration",
                  "scope": 829,
                  "src": "474:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 816,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "474:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "473:13:2"
            },
            "returnParameters": {
              "id": 819,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "494:0:2"
            },
            "scope": 874,
            "src": "440:106:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 842,
              "nodeType": "Block",
              "src": "589:53:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 839,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 837,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 833,
                            "name": "now",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1578,
                            "src": "615:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 836,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "id": 834,
                              "name": "GAP",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 775,
                              "src": "621:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "argumentTypes": null,
                              "hexValue": "32",
                              "id": 835,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "627:1:2",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            },
                            "src": "621:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "615:13:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 838,
                          "name": "SEC",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 778,
                          "src": "631:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "615:19:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 832,
                      "name": "setStakingStart",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 873,
                      "src": "599:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 840,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "599:36:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 841,
                  "nodeType": "ExpressionStatement",
                  "src": "599:36:2"
                }
              ]
            },
            "documentation": null,
            "id": 843,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setAfterWithdrawal",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 830,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "579:2:2"
            },
            "returnParameters": {
              "id": 831,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "589:0:2"
            },
            "scope": 874,
            "src": "552:90:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 872,
              "nodeType": "Block",
              "src": "692:147:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 850,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 848,
                      "name": "stakingStarts",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46,
                      "src": "702:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 849,
                      "name": "time",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 845,
                      "src": "718:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "702:20:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 851,
                  "nodeType": "ExpressionStatement",
                  "src": "702:20:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 856,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 852,
                      "name": "stakingEnds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48,
                      "src": "732:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 855,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 853,
                        "name": "time",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 845,
                        "src": "746:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 854,
                        "name": "GAP",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 775,
                        "src": "753:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "746:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "732:24:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 857,
                  "nodeType": "ExpressionStatement",
                  "src": "732:24:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 862,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 858,
                      "name": "withdrawStarts",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50,
                      "src": "766:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 861,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 859,
                        "name": "time",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 845,
                        "src": "783:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 860,
                        "name": "GAP",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 775,
                        "src": "790:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "783:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "766:27:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 863,
                  "nodeType": "ExpressionStatement",
                  "src": "766:27:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 870,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 864,
                      "name": "withdrawEnds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 52,
                      "src": "803:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 869,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 865,
                        "name": "time",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 845,
                        "src": "818:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 868,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 866,
                          "name": "GAP",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 775,
                          "src": "825:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "32",
                          "id": 867,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "831:1:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "src": "825:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "818:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "803:29:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 871,
                  "nodeType": "ExpressionStatement",
                  "src": "803:29:2"
                }
              ]
            },
            "documentation": null,
            "id": 873,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setStakingStart",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 846,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 845,
                  "name": "time",
                  "nodeType": "VariableDeclaration",
                  "scope": 873,
                  "src": "673:9:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 844,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "673:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "672:11:2"
            },
            "returnParameters": {
              "id": 847,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "692:0:2"
            },
            "scope": 874,
            "src": "648:191:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "private"
          }
        ],
        "scope": 875,
        "src": "51:790:2"
      }
    ],
    "src": "0:842:2"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.8+commit.23d335f2.Emscripten.clang"
  },
  "networks": {
    "4": {
      "events": {},
      "links": {},
      "address": "0x20657460faDDdB0B2F342C6a157805D21ACb46c2",
      "transactionHash": "0xf291c0592ecbf2a7e880153604f7aa3c74e5bf0fbeb11853045e7c005f667578"
    }
  },
  "schemaVersion": "3.0.11",
  "updatedAt": "2019-09-09T20:49:08.367Z",
  "devdoc": {
    "methods": {}
  },
  "userdoc": {
    "methods": {
      "stake(uint256)": {
        "notice": "Requirements: - `amount` Amount to be staked"
      }
    }
  }
}